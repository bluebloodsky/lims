<?php
/**
 * Created by PhpStorm.
 * User: libgcc
 * Date: 2016/12/23
 * Time: 13:56
 */

class BaseCfgExtra
{
    public $m_cfgFileName = '';

    public function __construct($cfgFileName)
    {
        $this->m_cfgFileName = $cfgFileName;
    }

    protected function GetCfgFile()
    {
        global $gMmsEtcHome;
        $file =  $gMmsEtcHome.$this->m_cfgFileName;
        error_log("before read cfg file $file");
        return $file;
    }
    protected function Filter($item)
    {
        return false;
    }
    public function GetCfgData()
    {
        $RET = [];
        $xml = simplexml_load_file($this->GetCfgFile());
        foreach ($xml->children() as $tag1)
        {
            $item1 = $tag1->getName();
            if($this->Filter($item1))
                break;

            foreach ($tag1->children() as $tag2)
            {
                $item2 = $tag2->getName();
                $val2 = $tag2->__toString();
                $RET[$item1."_".$item2] = $val2;
            }
        }

        return $RET;
    }

    public function SetCfgData($logCfg)
    {
        $logCfgFile = $this->GetCfgFile();
        $xml = simplexml_load_file($logCfgFile);
        foreach ($logCfg as $key=>$val)
        {
            $nameArr = explode('_', $key, 2);
            $xml->$nameArr[0]->$nameArr[1] = $val;
        }

        $RET = $xml->asXML($logCfgFile);
        if(!$RET)
        {
            throw new Exception("save config failed!");
        }

        return ['ret'=>'success'];
    }
}

class LogCfgExtra extends BaseCfgExtra
{
    public function __construct()
    {
        parent::__construct("logcfg.xml");
    }
    public function Filter($item)
    {
        return $item != "LogControl";
    }
}
class MmsCfgExtra extends BaseCfgExtra
{
    public function __construct()
    {
        parent::__construct("mms_config.xml");
    }

    private function GetIedNameAndAP()
    {
        global $gMmsIcdHome;
       $icdFiles = array_diff(scandir($gMmsIcdHome), ['..', '.']);
        $RET = [];
        foreach ($icdFiles as $icdFile)
        {
            $d = [];
            $xml = new XMLReader();
            $xml->open($gMmsIcdHome.$icdFile);
            while($xml->read())
            {
                if($xml->nodeType==XMLReader::ELEMENT && $xml->name == 'ConnectedAP')
                {
                    if($xml->hasAttributes)
                    {
                        $attributes = array();
                        while($xml->moveToNextAttribute())
                        {
                            $attributes[$xml->name] = $xml->value;
                        }
                        $d['iedName'] = $attributes['iedName'];
                        $d['AP'][] = $attributes['apName'];
                    }
                } else if($xml->nodeType==XMLReader::END_ELEMENT && $xml->name == 'Communication') {
                    break;
                }
            }

            $RET[basename($icdFile)] = $d;
            $xml->close();
        }

        return $RET;
    }

    public function GetCfgData()
    {
        $RET = parent::GetCfgData(); // TODO: Change the autogenerated stub
        $RET['IED_INFO'] = $this->GetIedNameAndAP();
        return $RET;
    }
}
